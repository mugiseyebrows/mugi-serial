name: main
on: [push]
jobs:
  main:
    runs-on: windows-2022
    steps:
    - name: checkout app
      uses: actions/checkout@v3
    - name: parse tag for version
      uses: battila7/get-version-action@v2
      id: get_version
    - name: prepare env
      shell: cmd
      run: echo PATH=%CD%\6.2.0\mingw81_64\bin;%CD%\Tools\mingw810_64\bin;C:\Miniconda;C:\Miniconda\Scripts;C:\Program Files\7-Zip;C:\ProgramData\Chocolatey\bin;C:\Program Files\Git\bin;C:\windows\system32;C:\windows>> %GITHUB_ENV%
    - name: test env 1
      shell: cmd
      run: |
        where 7z
        where python
        where pip
    - name: install python modules
      shell: cmd
      run: pip install aqtinstall mugideploy
    - name: install qt
      shell: cmd
      run: aqt install-qt windows desktop 6.2.0 win64_mingw81 -m qtserialport
    - name: install mingw
      shell: cmd
      run: aqt install-tool windows desktop tools_mingw qt.tools.win64_mingw810
    - name: test env 2
      shell: cmd
      run: |
        where qmake
        where gcc
    - name: build app
      shell: cmd
      run: |
        qmake
        mingw32-make release
    - name: update version header
      shell: cmd
      run: mugideploy update --version ${{ steps.get_version.outputs.version }} --version-header version.h
    - name: collect app
      shell: cmd
      run: mugideploy collect --bin release\mugi-serial.exe
    - name: zip app
      shell: cmd
      run: 7z a mugi-serial-${{ steps.get_version.outputs.version }}-win64.zip mugi-serial-${{ steps.get_version.outputs.version }}-win64
    - uses: actions/upload-artifact@v3
      with:
        name: mugi-serial-${{ steps.get_version.outputs.version }}-win64
        path: mugi-serial-${{ steps.get_version.outputs.version }}-win64
    - uses: ncipollo/release-action@v1
      if: startsWith( github.ref, 'refs/tags/')
      with:
        artifacts: mugi-serial-${{ steps.get_version.outputs.version }}-win64.zip
        token: ${{ secrets.GITHUB_TOKEN }}
